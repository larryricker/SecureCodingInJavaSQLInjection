buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		// for dependency analysis plugin
		classpath 'ca.cutterslade.gradle:gradle-dependency-analyze:1.3.3'
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
	}
}

plugins {
    // Apply the java-library plugin to add support for Java Library
	id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'ca.cutterslade.analyze'  version '1.3.3'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    // id 'war'
    id 'net.nemerosa.versioning' version '2.6.1'
    id 'eclipse'
    id 'jacoco' // Caused by: java.lang.RuntimeException: Class java/util/UUID could not be instrumented.
}

// apply plugin: 'jacoco'

mainClassName = "northwind.vulnerability.DemoApplication"

group = 'northwind'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	// Exclude Tomcat from build and war tasks
	//providedCompile 'org.springframework.boot:spring-boot-starter-tomcat'
	//providedCompile 'org.apache.tomcat.embed:tomcat-embed-websocket'
	//providedCompile 'org.apache.tomcat.embed:tomcat-embed-el'
	//providedCompile 'org.apache.tomcat.embed:tomcat-embed-core'
	// Hibernate 5 dependency
	// // implementation 'org.hibernate:hibernate-agroal:5.3.15.Final'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.9'
    
    // springboot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Let's get some rest
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.data:spring-data-commons'
    // support for servlet for SQL injection test - ordersServlet
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    
    // SWAGGER2 sensible configuration for JBOSS for Spring Boot Application
    //implementation 'io.springfox:springfox-swagger2:2.9.2'
    
	// JSF Jakarta dependencies
	// implementation 'org.jboss.spec.javax.faces:jboss-jsf-api_2.3_spec:3.0.0.SP01'
	// implementation 'org.jboss.spec.javax.faces:jboss-jsf-api_2.1_spec:2.1.29.1.Final'

	implementation 'org.apache.logging.log4j:log4j-api:2.6.1'
	implementation 'org.apache.logging.log4j:log4j-core:2.6.1'
	
	// SessionScoped 2020 version of beans JRE 12
	// implementation 'com.guicedee.services:jakarta.enterprise.cdi-api:1.0.2.3-jre12'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // implementation 'com.google.guava:guava:28.0-jre'

    // other dependencies
    //compileOnly 'javax.servlet:servlet-api:2+'
    //compileOnly 'javax.ws.rs:javax.ws.rs-api:2+'
    //compileOnly 'javax:javaee-api:8.+'
    //compileOnly 'org.wildfly.core:wildfly-server:10.0.0.Final'

    // Use JUnit test framework
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    //testImplementation 'javax.servlet:servlet-api:2+'
    //testImplementation 'javax.ws.rs:javax.ws.rs-api:2+'
    //testImplementation 'javax:javaee-api:8.+'
    // testCompile 'org.junit.platform:junit-platform-gradle-plugin:1.+'
    testCompile 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
    
    // testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    // testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.0', 
    // 	'org.junit.platform:junit-platform-launcher:1.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0',
    	'org.junit.platform:junit-platform-launcher:1.6.0'
    	
    
}

test {
   	useJUnitPlatform()
	include '**/**'
	reports {
		junitXml.enabled = true
		html.enabled = true
	}
}


jacoco {
	toolVersion = "0.7.4.201502262128"	
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.enabled false
	}
}


